import os
import sys
from pathlib import Path
from django.core.wsgi import get_wsgi_application

BASE_DIR = Path(__file__).resolve().parent.parent

sys.path.append(BASE_DIR.as_posix())
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'posymess.posymess.settings')

from posymess.posymess.settings import BOT_TOKEN
from posymess.main.models import User, Flower, Order





import asyncio

from aiogram import Bot, Dispatcher
# from aiogram import Bot, Dispatcher, F, types
# from aiogram.filters import Command
# from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
# from aiogram.types import Message


# from aiogram.fsm.context import FSMContext
# from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.storage.memory import MemoryStorage
# –ò–º–ø–æ—Ä—Ç Django ORM
# from django.core.wsgi import get_wsgi_application




# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
import logging

logging.basicConfig(level=logging.INFO)

#
# django_application = get_wsgi_application()
#
# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot: Bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())


#
# # –û–ø—Ä–µ–¥–µ–ª–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
# class States(StatesGroup):
#     send_email = State()
#     select_posy = State()
#
# # –°–æ–∑–¥–∞–µ–º Reply –∫–Ω–æ–ø–∫–∏ (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
# main_menu_markup = ReplyKeyboardMarkup(resize_keyboard=True)
# main_menu_markup.add(KeyboardButton("üöÄ Help"), KeyboardButton("üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã"))
# main_menu_markup.add(KeyboardButton("üíê –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"))
#
# # Start-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –≤—ã–∑–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
# @dp.message(Command(commands=["start"]))
# async def start_command(message: types.Message):
#     await message.answer(
#         "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ –±—É–∫–µ—Ç–æ–≤ üå∏\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
#         reply_markup=main_menu_markup
#     )


# -----------------------------------------------------------------
async def main():
    # await set_commands(bot)
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    await dp.start_polling(bot)


async def stop_bot() -> None:
    await bot.session.close()
    print('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


#

if __name__ == '__main__':

    try:
        asyncio.run(main())

    except KeyboardInterrupt:
        asyncio.run(stop_bot())

    # bot: Bot = Bot(token=BOT_TOKEN)
    # dp = Dispatcher()
    #
    #
    # async def set_commands(robot: Bot) -> None:
    #     commands = [
    #         types.BotCommand(command='/start', description='–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
    #         types.BotCommand(command='/help', description='–ü–æ–º–æ—â—å'),
    #         types.BotCommand(command='/weather', description='–ü–æ–≥–æ–¥–∞ –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ'),
    #     ]
    #     await robot.set_my_commands(commands)